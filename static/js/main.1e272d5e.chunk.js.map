{"version":3,"sources":["components/Header/Header.js","redux/types.js","components/Main/Types.js","components/Context.js","components/Main/Card.js","components/Main/BigCard.js","components/Main/Main.js","redux/actions.js","App.js","redux/Reducer.js","redux/store.js","index.js"],"names":["Header","className","GET_ALL_POKEMONS","Types","item","bgColor","style","backgroundColor","Context","React","createContext","Card","gettingList","useContext","arrayOfAll","useSelector","state","image","url","slice","name","substr","toUpperCase","array","types","Object","entries","map","key","value","exactType","type","onClick","e","id","src","alt","BigCard","weight","numberOfPok","moves","height","num","length","class","scope","Main","useState","view","setView","count","setCount","setWeight","setNumberOfPok","setMoves","setHeight","setType","setName","dispatch","useDispatch","pokemons","allPokemons","useEffect","a","fetch","responce","json","arrayEveryPokemon","i","every","transform","push","payload","results","getAllPokemons","Provider","data","currentTarget","prev","move","heigh","App","initialStore","rootReducer","combineReducers","getPokemon","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e272d5e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n            Pokedex\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","export const GET_ALL_POKEMONS = \"GET_ALL_POKEMONS\";","import React from \"react\";\r\n\r\nfunction Types({item}) {\r\n\r\n    let bgColor = \"\";\r\n\r\n    if (item === \"grass\") {\r\n        bgColor = \"#B4DCA3\";\r\n    } else if (item === \"poison\") {\r\n        bgColor = \"#B49EC0\"\r\n    } else if (item === \"fire\") {\r\n        bgColor = \"#F19A97\"\r\n    } else if (item === \"electric\") {\r\n        bgColor = \"#FFE28A\"\r\n    } else if (item === \"bug\") {\r\n        bgColor = \"#CC397B\"\r\n    } else if (item === \"flying\") {\r\n        bgColor = \"#F07427\"\r\n    } else if (item === \"ground\") {\r\n        bgColor = \"#F0EAD6\"\r\n    } else {\r\n        bgColor = \"#23FFF4\"\r\n    }\r\n\r\n    return (\r\n        <div className=\"type\" style={{backgroundColor: bgColor}}>\r\n            {item}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Types;\r\n","import React from \"react\";\r\n\r\nexport const Context = React.createContext();","import React, {useContext } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Types from './Types';\r\nimport { Context } from \"../Context\";\r\n\r\nfunction Card(item) {\r\n\r\n    const {gettingList} = useContext(Context)\r\n\r\n    const arrayOfAll = useSelector(state => state.arrayOfAll.arrayOfAll);\r\n\r\n    const image = item.url.slice(34).slice(0, -1);\r\n\r\n    const name = item.name.substr(0, 1).toUpperCase() + item.name.slice(1);\r\n\r\n    const array = arrayOfAll[image - 1];\r\n\r\n    const arrayOfTypes = array ? Object.entries(array).map(([key, value]) => {\r\n        if (key === \"types\") {\r\n            return value;\r\n        }\r\n    }) : \"\";\r\n\r\n    const types = arrayOfTypes[16];\r\n\r\n    const exactType = types ? types.map(item => {\r\n        return (\r\n            Object.entries(item).map(([key, value]) => {\r\n                if (key === \"type\") {\r\n                    return value;\r\n                }\r\n            }\r\n        )\r\n    )}) : \"\";\r\n\r\n    const type = exactType ? exactType.map(item => item[1][\"name\"]) : \"\";\r\n\r\n    const url = `https://pokeres.bastionbot.org/images/pokemon/${image}.png`;\r\n\r\n    return (\r\n        <div onClick={(e) => gettingList(e)} id={image} className=\"card card-style\">\r\n            <img src={url} className=\"card-img-top image\" alt=\"image\" />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{name}</h5>\r\n                <div className=\"line\">\r\n                    {type ? type.map(item => <Types item={item} />) : \"\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nfunction BigCard({ weight, numberOfPok, moves, height, type, name }) {\r\n\r\n    const url = `https://pokeres.bastionbot.org/images/pokemon/${numberOfPok}.png`;\r\n\r\n    const num = (numberOfPok.length === 3) ? `${numberOfPok}`\r\n            : (numberOfPok.length === 2) ? `0${numberOfPok}`\r\n            : `00${numberOfPok}`\r\n\r\n    return (\r\n        <div class=\"card big-card\">\r\n            <img src={url} class=\"card-img-top\" alt=\"image\" />\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\">{name} {num}</h5>\r\n                <table class=\"table table-bordered\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th scope=\"row\">Type</th>\r\n                            <td>\r\n                                {type ? type.map(item => <div>{item}</div>) : \"\"}\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Height</th>\r\n                            <td>{height}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Weight</th>\r\n                            <td>{weight}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th scope=\"row\">Total Moves</th>\r\n                            <td>{moves}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BigCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllPokemons } from \"../../redux/actions\";\r\nimport Card from \"./Card\";\r\nimport BigCard from \"./BigCard\";\r\nimport { Context } from \"../Context\";\r\n\r\nfunction Main() {\r\n\r\n    const [view, setView] = useState(false)\r\n    const [count, setCount] = useState(12);\r\n    const [weight, setWeight] = useState();\r\n    const [numberOfPok, setNumberOfPok] = useState();\r\n    const [moves, setMoves] = useState();\r\n    const [height, setHeight] = useState();\r\n    const [type, setType] = useState([]);\r\n    const [name, setName] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const pokemons = useSelector(state => state.allPokemons.allPokemons);\r\n    const arrayOfAll = useSelector(state => state.arrayOfAll.arrayOfAll);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPokemons(count));\r\n    }, [count]);\r\n\r\n    const loadMore = () => {\r\n        setCount((prev) => prev + 12)\r\n    };\r\n\r\n    const gettingList = (e) => {\r\n        setView(true);\r\n        const data = arrayOfAll[e.currentTarget.id - 1];\r\n        setWeight((prev) => prev = data[\"weight\"]);\r\n        const id = e.currentTarget.id;\r\n        setNumberOfPok((prev) => prev = id);\r\n        const move = data[\"moves\"].length;\r\n        setMoves((prev) => prev = move);\r\n        const heigh = data[\"height\"];\r\n        setHeight((prev) => prev = heigh);\r\n        const type = data[\"types\"].map(item => item[\"type\"][\"name\"]);\r\n        setType((prev) => prev = type);\r\n        let name = data[\"name\"];\r\n        name = name.substr(0, 1).toUpperCase() + name.slice(1);\r\n        setName((prev) => prev = name);\r\n    }\r\n\r\n    const hiddenButton = () => {\r\n        setView(false);\r\n    }\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            gettingList\r\n        }}>\r\n            <div className=\"page\">\r\n                <div className=\"main\">\r\n                    {pokemons.map((item) => <Card {...item} />)}\r\n                    <button onClick={loadMore} className=\"loadmore\">Load More</button>\r\n                </div>\r\n                <div className=\"big\">\r\n                    {view ? (\r\n                            <div className=\"load\">\r\n                                <BigCard weight={weight} name={name} type={type} numberOfPok={numberOfPok} moves={moves} height={height}/>\r\n                                <button onClick={hiddenButton} className=\"loadmore\">Hidden</button>\r\n                            </div>\r\n                    ) : \"\"}\r\n                </div>\r\n            </div>\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Main;\r\n","import { GET_ALL_POKEMONS } from \"./types\";\r\n\r\nexport function getAllPokemons(count) {\r\n    return async dispatch => {\r\n            const responce = await fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${count}`);\r\n            const json = await responce.json();\r\n\r\n            const arrayEveryPokemon = [];\r\n            for (let i = 1; i <= count; i++) {\r\n                const every = await fetch(`https://pokeapi.co/api/v2/pokemon/${i}/`);\r\n                const transform = await every.json();\r\n                arrayEveryPokemon.push(transform);\r\n            }\r\n        dispatch({\r\n            type: GET_ALL_POKEMONS,\r\n            payload: json.results,\r\n            array: arrayEveryPokemon\r\n        })\r\n    }\r\n}\r\n","import './App.css';\nimport Header from \"./components/Header/Header\";\nimport Main from \"./components/Main/Main\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { GET_ALL_POKEMONS } from \"./types\";\r\n\r\nconst initialStore = {\r\n    allPokemons: [],\r\n    arrayOfAll: []\r\n}\r\n\r\nexport const rootReducer = combineReducers({\r\n    allPokemons: getPokemon,\r\n    arrayOfAll: getPokemon\r\n});\r\n\r\nexport function getPokemon(state = initialStore, action) {\r\n    switch(action.type) {\r\n        case GET_ALL_POKEMONS:\r\n            return {...state, allPokemons: action.payload, arrayOfAll: action.array}\r\n        default: return state\r\n    }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootReducer } from \"./Reducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(\r\n    applyMiddleware(thunk),\r\n));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}